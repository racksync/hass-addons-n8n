# Basic nginx process configuration
# Sets the number of worker processes to 1, suitable for most Home Assistant add-ons
worker_processes  1;

# Configure error logging to stdout for Home Assistant's log management
# 'info' level provides detailed information without being too verbose
error_log /dev/stdout info;

# Store the nginx process ID for process management
pid /var/run/nginx.pid;

# Event loop configuration
events {
    # Maximum number of simultaneous connections per worker
    # 128 is a balanced value for Home Assistant add-ons
    worker_connections  128;
}

# HTTP server configuration
http {
    # Log access requests to stdout for Home Assistant's log management
    access_log /dev/stdout;

    # Include MIME types mapping file for proper content serving
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enable efficient file sending and keep-alive connections
    sendfile        on;
    keepalive_timeout  65;

    #############################################
    # n8n Web Interface Server (Port 8765)
    #############################################
    # This server block handles the main n8n web interface
    # Access is restricted to Home Assistant ingress proxy
    # Port 8765 is internal and not exposed directly
    server {
        server_name 0.0.0.0;
        listen 8765;

        # Security: Only allow access from Home Assistant ingress proxy
        # $NGINX_ALLOWED_IP is set via environment variable
        allow $NGINX_ALLOWED_IP;
        deny all;

        # Proxy configuration for n8n web interface
        location / {
            # Forward requests to n8n running on port 5678
            proxy_pass http://localhost:5678;

            # Standard proxy headers for proper request handling
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support for real-time features
            # Required for n8n's workflow editor and execution
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    #############################################
    # n8n Webhook and API Server (Port 7123)
    #############################################
    # This server block handles webhook and API endpoints
    # Port 7123 is exposed to allow external services to trigger workflows
    # Only specific endpoints are allowed for security
    server {
        server_name 0.0.0.0;
        listen 7123;

        # Route webhook and API requests
        # Matches paths starting with:
        # - /webhook: For workflow triggers from external services
        # - /webhook-test: For testing webhook configurations
        # - /webhook-waiting: For waiting webhook nodes
        # - /api: For programmatic access to n8n
        location ~ ^/(webhook|webhook-test|webhook-waiting|api)(/.*)?$ {
            # Forward requests to n8n maintaining the original path
            # $1 captures the base endpoint (webhook, api, etc.)
            # $2 captures any additional path components
            proxy_pass http://localhost:5678/$1$2;

            # Standard proxy headers for proper request handling
            # These headers help n8n understand the original request details
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Return 404 for all other paths for security
        # This prevents access to any non-webhook/API endpoints
        location / {
            return 404;
        }
    }
}