name: Update CHANGELOG

on:
  release:
    types: [published]

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update CHANGELOG.md and config.json
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}
          GH_TOKEN: ${{ secrets.CR_PAT }}
        run: |
          # Extract tag and release notes from the event payload
          TAG=$(jq -r '.release.tag_name' "$GITHUB_EVENT_PATH")
          RELEASE_NOTES=$(jq -r '.release.body' "$GITHUB_EVENT_PATH")
          
          # create new GIT branch
          git checkout -b "automated/update-changelog-${TAG}"

          # Prepend new release info to the existing CHANGELOG.md
          { echo -e "# Release ${TAG}\n\n${RELEASE_NOTES}\n\n"; cat CHANGELOG.md; } > CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md

          # put new version into config.json
          jq --arg tag "$TAG" '.version = $tag' config.json > config.tmp
          mv config.tmp config.json

          # re-read the tag in this step
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git add config.json
          git commit -m "chore: update changelog for release ${TAG}"
          git push --set-upstream origin "automated/update-changelog-${TAG}"

          # create PR
          gh pr create \
            --title "chore: update changelog for release ${TAG}" \
            --body "This PR updates the changelog."

          # merge PR
          gh pr merge "automated/update-changelog-${TAG}" --merge
